input {
  beats {
    port => 5044
  }
}

filter {

  # Calculate the TLS days_to_expiration if TLS data exists
  if [tls][certificate_not_valid_before] {
    # Create event_time variable from the timestamp
    mutate {
      add_field => [ "event_time", "%{@timestamp}" ]
    }
    # use date filter to parse event_time as ISO8601
    date {
		  id => "get_timedate"
		  match => [ "event_time", "ISO8601" ]
		  target => "tls_start_date"
	  }
    # use date filter to parse the tls metadata
    date {
		  id => "parse_tls_end_date"
		  match => [ "[tls][certificate_not_valid_after]", "ISO8601" ]
		  target => "tls_end_date"
	  }
    # use ruby code to calculate the days left
    ruby {
      init => "require 'time'"
	    code => "event.set('[tls][days_to_expiration]', (event.get('[tls_end_date]') - event.get('[tls_start_date]'))/3600/24)"
    }
    # ensure days left variable is an integer
    mutate {
      convert => { "[tls][days_to_expiration]" => "integer" }
    }
  }

  # if geo data exists, add it as an ECS field proper
  if [latitude] {
    mutate {
      convert => ["latitude", "float"]
    }
    mutate {
      rename => { "latitude" => "[location][lat]" }
    }
  }
  if [longitude] {
    mutate {
      convert => [ "longitude", "float" ]
    }
    mutate {
      rename => { "longitude" => "[location][lon]" }
    }
  }

  # add more TLS metadata if days_to_expiration variable exists
  if ([tls][days_to_expiration]) {
    if [tls][days_to_expiration] <= 90 and [tls][days_to_expiration] >= 1 {
      mutate {
        add_field => { "[tls][cert_status]" => "expiring" }
      }
    } else if [tls][days_to_expiration] <= 0 {
      mutate {
        add_field => { "[tls][cert_status]" => "expired" }  
      }
    } else {
      mutate {
       add_field => { "[tls][cert_status]" => "valid" }
      }
    }
  }

  # remote arbitrary fields
  mutate {
    remove_field => [ "tls_end_date", "tls_start_date", "event_time", "headers" ]
  }
}

output {
  elasticsearch {
   hosts => ["elastic-ingest-node:9200"]
   # include document_type of _doc for ELK v6. Not needed for ELK v7
   # document_type => "_doc"
   index => "my-index-%{+YYYY.MM.dd}"
   # if using ILM, define the index setting as the ILM write alias.
   #index => "my-write-alias"
   user => "logstash-user"
   password => "BogusPassword123"
 }
}